import { JSX } from "solid-js";
import { TransitionProps, TransitionStatus } from "solid-react-transition";
export type TransitionWrapperChildFunction = (status: TransitionStatus, props: Record<string, unknown>) => JSX.Element;
export type TransitionWrapperProps = Omit<TransitionProps, "addEndListener" | "onEnter" | "onEntering" | "onEntered" | "onExit" | "onExiting" | "onExited"> & {
    childRef?: (r: HTMLElement) => void;
    children: JSX.Element | TransitionWrapperChildFunction;
    addEndListener?: (el: HTMLElement, done: (e: TransitionEvent) => void) => void;
    onEnter?: (el: HTMLElement, isAppearing?: boolean) => void;
    onEntering?: (el: HTMLElement, isAppearing?: boolean) => void;
    onEntered?: (el: HTMLElement, isAppearing?: boolean) => void;
    onExit?: (el: HTMLElement) => void;
    onExiting?: (el: HTMLElement) => void;
    onExited?: (e?: HTMLElement) => void;
};
declare const TransitionWrapper: (p: TransitionWrapperProps) => JSX.Element;
export default TransitionWrapper;
