import { JSX } from "solid-js";
import { BsPrefixProps, BsPrefixRefForwardingComponent } from "./helpers";
export type CarouselVariant = "dark";
export interface CarouselProps extends BsPrefixProps, Omit<JSX.HTMLAttributes<HTMLElement>, "onSelect" | "ref"> {
    slide?: boolean;
    fade?: boolean;
    controls?: boolean;
    indicators?: boolean;
    indicatorLabels?: string[];
    activeIndex?: number;
    onSelect?: (eventKey: number, event: Record<string, unknown> | null) => void;
    defaultActiveIndex?: number;
    onSlide?: (eventKey: number, direction: "start" | "end") => void;
    onSlid?: (eventKey: number, direction: "start" | "end") => void;
    interval?: number;
    keyboard?: boolean;
    pause?: "hover" | false;
    wrap?: boolean;
    touch?: boolean;
    prevIcon?: JSX.Element;
    prevLabel?: JSX.Element;
    nextIcon?: JSX.Element;
    nextLabel?: JSX.Element;
    variant?: CarouselVariant;
    ref?: (r: {
        element: () => HTMLElement;
        prev: (event?: any) => void;
        next: (event?: any) => void;
    }) => void;
}
declare const _default: BsPrefixRefForwardingComponent<"div", CarouselProps> & {
    Caption: BsPrefixRefForwardingComponent<"div", unknown>;
    Item: (p: import("./CarouselItem").CarouselItemProps) => JSX.Element;
};
export default _default;
