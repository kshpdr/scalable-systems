import { mergeProps, splitProps } from "solid-js";
import classNames from "./classnames";
import { useBootstrapPrefix } from "./ThemeProvider";
import Dropdown from "./Dropdown";
import NavLink from "./NavLink";
const defaultProps = {};
const NavDropdown = (p) => {
    /* NavItem has no additional logic, it's purely presentational. Can set nav item class here to support "as" */
    const [local, props] = splitProps(mergeProps(defaultProps, p), [
        "id",
        "title",
        "children",
        "bsPrefix",
        "class",
        "rootCloseEvent",
        "menuRole",
        "disabled",
        "active",
        "renderMenuOnMount",
        "menuVariant",
    ]);
    const navItemPrefix = useBootstrapPrefix(undefined, "nav-item");
    return (<Dropdown {...props} class={classNames(local.class, navItemPrefix)}>
      <Dropdown.Toggle id={local.id} eventKey={null} active={local.active} disabled={local.disabled} childBsPrefix={local.bsPrefix} as={NavLink}>
        {local.title}
      </Dropdown.Toggle>

      <Dropdown.Menu role={local.menuRole} renderOnMount={local.renderMenuOnMount} rootCloseEvent={local.rootCloseEvent} variant={local.menuVariant}>
        {local.children}
      </Dropdown.Menu>
    </Dropdown>);
};
export default Object.assign(NavDropdown, {
    Item: Dropdown.Item,
    ItemText: Dropdown.ItemText,
    Divider: Dropdown.Divider,
    Header: Dropdown.Header,
});
