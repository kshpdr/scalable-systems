import { useSSRSafeId } from "./ssr";
import DropdownContext from "./DropdownContext";
import { useContext } from "solid-js";
export const isRoleMenu = (el) => el.getAttribute("role")?.toLowerCase() === "menu";
const noop = () => { };
/**
 * Wires up Dropdown toggle functionality, returning a set a props to attach
 * to the element that functions as the dropdown toggle (generally a button).
 *
 * @memberOf Dropdown
 */
export function useDropdownToggle() {
    const id = useSSRSafeId();
    const context = useContext(DropdownContext);
    const handleClick = (e) => {
        context.toggle(!context.show, e);
    };
    return [
        {
            id,
            get ref() {
                return context.setToggle || noop;
            },
            onClick: handleClick,
            get "aria-expanded"() {
                return !!context.show;
            },
            get "aria-haspopup"() {
                return (context.menuElement && isRoleMenu(context.menuElement) ? true : undefined);
            },
        },
        {
            get show() {
                return context.show;
            },
            get toggle() {
                return context.toggle;
            },
        },
    ];
}
/**
 * Also exported as `<Dropdown.Toggle>` from `Dropdown`.
 *
 * @displayName DropdownToggle
 * @memberOf Dropdown
 */
export function DropdownToggle({ children }) {
    const [props, meta] = useDropdownToggle();
    return <>{children(props, meta)}</>;
}
/** @component */
export default DropdownToggle;
