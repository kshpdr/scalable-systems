export type DOMContainer<T extends HTMLElement = HTMLElement> = T | null | (() => T | null);
export declare const resolveContainerRef: <T extends HTMLElement>(ref: DOMContainer<T> | undefined, document?: Document) => HTMLBodyElement | T | null;
export declare function useWaitForDOMRef<T extends HTMLElement = HTMLElement>(props: {
    ref?: DOMContainer<T>;
    onResolved?: (element: T | HTMLBodyElement) => void;
}): import("solid-js").Accessor<HTMLBodyElement | T | null>;
export default useWaitForDOMRef;
