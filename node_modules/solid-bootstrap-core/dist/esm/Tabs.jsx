import { createControlledProp } from "./createControlledProp";
import { useSSRSafeId } from "./ssr";
import TabContext from "./TabContext";
import SelectableContext from "./SelectableContext";
import TabPanel from "./TabPanel";
import { createMemo } from "solid-js";
export const Tabs = (props) => {
    const [activeKey, onSelect] = createControlledProp(() => props.activeKey, () => props.defaultActiveKey, props.onSelect);
    const id = useSSRSafeId(props.id);
    const generateChildId = createMemo(() => props.generateChildId ||
        ((key, type) => (id ? `${id}-${type}-${key}` : null)));
    const tabContext = {
        get onSelect() {
            return onSelect;
        },
        get activeKey() {
            return activeKey();
        },
        get transition() {
            return props.transition;
        },
        get mountOnEnter() {
            return props.mountOnEnter || false;
        },
        get unmountOnExit() {
            return props.unmountOnExit || false;
        },
        get getControlledId() {
            return (key) => generateChildId()(key, "pane");
        },
        get getControllerId() {
            return (key) => generateChildId()(key, "tab");
        },
    };
    return (<TabContext.Provider value={tabContext}>
      <SelectableContext.Provider value={onSelect || null}>
        {props.children}
      </SelectableContext.Provider>
    </TabContext.Provider>);
};
Tabs.Panel = TabPanel;
export default Tabs;
